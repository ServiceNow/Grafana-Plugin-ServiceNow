<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>POST</http_method>
        <name>V1-Query-Acc_Agents</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {
	var filter="";
	var metricNames="";
	var sysParamQuery="";
	var filterType="";
	var limit = 9999;
	var page = 0;
	if (request.body.data.targets[0].target)
		filter = request.body.data.targets[0].target;
	if (request.body.data.targets[0].metricName)
		metricNames = request.body.data.targets[0].metricName;
	if (request.body.data.targets[0].sysparm_query)
		sysParamQuery = request.body.data.targets[0].sysparm_query;
	if (request.body.data.targets[0].filterType)
		filterType = request.body.data.targets[0].filterType;
	if (request.body.data.targets[0].limit) {
		if (request.body.data.targets[0].limit <= 10000 && request.body.data.targets[0].limit > 0)
			limit = request.body.data.targets[0].limit;
	}
	if (request.body.data.targets[0].page) {
		if (request.body.data.targets[0].page >= 0)
			page = request.body.data.targets[0].page;
	}
	
	var queryParams = request.queryParams;
	var endTimeInput=queryParams.endTime;
	var startTimeInput=queryParams.startTime;
	
	//To do: add a condition if input not provided to return 500 error
	
	response.setContentType('application/json');
    response.setStatus(200);
	
	var writer = response.getStreamWriter();
	var metricData = new global.GrafanaMetricData();
	
    var metricValues=metricData.getACCAgents(filter, metricNames, startTimeInput, endTimeInput, sysParamQuery, filterType, limit, page);
	writer.writeString(metricValues);
	
})(request, response);]]></operation_script>
        <operation_uri>/api/snc/grafana_api/v1/query/acc_agents</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/v1/query/acc_agents</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>optimiz</sys_created_by>
        <sys_created_on>2021-09-01 16:51:56</sys_created_on>
        <sys_id>cb895f821b1ab8507ef18736604bcb1b</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>V1-Query-Acc_Agents</sys_name>
        <sys_package display_value="Grafana Plugin" source="3247134e1bd6b8507ef18736604bcbf4">3247134e1bd6b8507ef18736604bcbf4</sys_package>
        <sys_policy/>
        <sys_scope display_value="Grafana Plugin">3247134e1bd6b8507ef18736604bcbf4</sys_scope>
        <sys_update_name>sys_ws_operation_cb895f821b1ab8507ef18736604bcb1b</sys_update_name>
        <sys_updated_by>optimiz</sys_updated_by>
        <sys_updated_on>2021-09-20 15:14:03</sys_updated_on>
        <web_service_definition display_value="Grafana API">018753021b1ab8507ef18736604bcbce</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
